//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Utility/Input/Inputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Inputs: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Inputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Inputs"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""5bcd39a5-864e-46bf-99d9-fc0f94b2c9f0"",
            ""actions"": [
                {
                    ""name"": ""MeleeAttack"",
                    ""type"": ""Button"",
                    ""id"": ""f8878367-f2d0-4338-9fef-f152306ba735"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""81615dfa-27c4-4abb-95ea-dc61811430ba"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Looking"",
                    ""type"": ""Value"",
                    ""id"": ""2d44c1e7-15ef-4409-937b-2de858a8ac9e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MovementPad"",
                    ""type"": ""Value"",
                    ""id"": ""8d44e3d0-6301-4bbe-af98-7e7952a28083"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MeleeAttackPad"",
                    ""type"": ""Button"",
                    ""id"": ""8f70dc48-c5be-4aff-8097-f594dc5570de"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AbilityCheeseWheel"",
                    ""type"": ""Button"",
                    ""id"": ""58840b51-eadb-4fc1-97a2-2b3bae2b7039"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AbilityAppleThrow"",
                    ""type"": ""Button"",
                    ""id"": ""4a9afc8b-923e-491d-b225-28c13b717ecb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AbilityPumpkinMine"",
                    ""type"": ""Button"",
                    ""id"": ""53fc6d01-fd99-49db-97d4-fab8ffefb871"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenPause"",
                    ""type"": ""Button"",
                    ""id"": ""63bdc40d-be0e-4a32-91f8-82b93e9f5fa4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""b00c35da-983c-4be6-a3d3-4e42473228a1"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""MeleeAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""b8217291-f14d-46c6-bbc3-55929e5e235e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""74650a0b-3564-4472-beec-79fdbcc638d3"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""ff435e07-85f4-4899-870f-2d901b80193b"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""7d04229d-cc28-4850-bd6b-72a5a05a54d8"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""0fa516d6-117d-405f-b683-18a7a6774542"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""ef403945-2c2d-4634-be81-c7c2f049ee26"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Looking"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6145a12b-904b-4e71-b3dc-dd3faff5766f"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""MovementPad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bea4971f-993d-428b-8e7f-e0f102928c45"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""MeleeAttackPad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3a973315-da00-4a81-86f9-e8d294002085"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""AbilityCheeseWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c5fbc359-bc02-482b-8e46-ea164b913b0f"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""AbilityCheeseWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fb154bf2-a87c-4c23-b626-76739b736b8c"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""AbilityAppleThrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fd6ddbfe-7c04-4c20-9dcb-4b370e24d291"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""AbilityAppleThrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fbe1e643-4376-4fd3-9bba-3100025bfbce"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""AbilityPumpkinMine"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""898ac8fa-de62-47fa-8e0a-c119dc8d9266"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""AbilityPumpkinMine"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ebaaea32-b39d-4938-aeec-f6f8a9564004"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""OpenPause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d124316-4db3-4539-ac4d-8af92f9b9c92"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""OpenPause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""KeyboardMouse"",
            ""bindingGroup"": ""KeyboardMouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_MeleeAttack = m_Player.FindAction("MeleeAttack", throwIfNotFound: true);
        m_Player_Movement = m_Player.FindAction("Movement", throwIfNotFound: true);
        m_Player_Looking = m_Player.FindAction("Looking", throwIfNotFound: true);
        m_Player_MovementPad = m_Player.FindAction("MovementPad", throwIfNotFound: true);
        m_Player_MeleeAttackPad = m_Player.FindAction("MeleeAttackPad", throwIfNotFound: true);
        m_Player_AbilityCheeseWheel = m_Player.FindAction("AbilityCheeseWheel", throwIfNotFound: true);
        m_Player_AbilityAppleThrow = m_Player.FindAction("AbilityAppleThrow", throwIfNotFound: true);
        m_Player_AbilityPumpkinMine = m_Player.FindAction("AbilityPumpkinMine", throwIfNotFound: true);
        m_Player_OpenPause = m_Player.FindAction("OpenPause", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_MeleeAttack;
    private readonly InputAction m_Player_Movement;
    private readonly InputAction m_Player_Looking;
    private readonly InputAction m_Player_MovementPad;
    private readonly InputAction m_Player_MeleeAttackPad;
    private readonly InputAction m_Player_AbilityCheeseWheel;
    private readonly InputAction m_Player_AbilityAppleThrow;
    private readonly InputAction m_Player_AbilityPumpkinMine;
    private readonly InputAction m_Player_OpenPause;
    public struct PlayerActions
    {
        private @Inputs m_Wrapper;
        public PlayerActions(@Inputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @MeleeAttack => m_Wrapper.m_Player_MeleeAttack;
        public InputAction @Movement => m_Wrapper.m_Player_Movement;
        public InputAction @Looking => m_Wrapper.m_Player_Looking;
        public InputAction @MovementPad => m_Wrapper.m_Player_MovementPad;
        public InputAction @MeleeAttackPad => m_Wrapper.m_Player_MeleeAttackPad;
        public InputAction @AbilityCheeseWheel => m_Wrapper.m_Player_AbilityCheeseWheel;
        public InputAction @AbilityAppleThrow => m_Wrapper.m_Player_AbilityAppleThrow;
        public InputAction @AbilityPumpkinMine => m_Wrapper.m_Player_AbilityPumpkinMine;
        public InputAction @OpenPause => m_Wrapper.m_Player_OpenPause;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @MeleeAttack.started += instance.OnMeleeAttack;
            @MeleeAttack.performed += instance.OnMeleeAttack;
            @MeleeAttack.canceled += instance.OnMeleeAttack;
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Looking.started += instance.OnLooking;
            @Looking.performed += instance.OnLooking;
            @Looking.canceled += instance.OnLooking;
            @MovementPad.started += instance.OnMovementPad;
            @MovementPad.performed += instance.OnMovementPad;
            @MovementPad.canceled += instance.OnMovementPad;
            @MeleeAttackPad.started += instance.OnMeleeAttackPad;
            @MeleeAttackPad.performed += instance.OnMeleeAttackPad;
            @MeleeAttackPad.canceled += instance.OnMeleeAttackPad;
            @AbilityCheeseWheel.started += instance.OnAbilityCheeseWheel;
            @AbilityCheeseWheel.performed += instance.OnAbilityCheeseWheel;
            @AbilityCheeseWheel.canceled += instance.OnAbilityCheeseWheel;
            @AbilityAppleThrow.started += instance.OnAbilityAppleThrow;
            @AbilityAppleThrow.performed += instance.OnAbilityAppleThrow;
            @AbilityAppleThrow.canceled += instance.OnAbilityAppleThrow;
            @AbilityPumpkinMine.started += instance.OnAbilityPumpkinMine;
            @AbilityPumpkinMine.performed += instance.OnAbilityPumpkinMine;
            @AbilityPumpkinMine.canceled += instance.OnAbilityPumpkinMine;
            @OpenPause.started += instance.OnOpenPause;
            @OpenPause.performed += instance.OnOpenPause;
            @OpenPause.canceled += instance.OnOpenPause;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @MeleeAttack.started -= instance.OnMeleeAttack;
            @MeleeAttack.performed -= instance.OnMeleeAttack;
            @MeleeAttack.canceled -= instance.OnMeleeAttack;
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Looking.started -= instance.OnLooking;
            @Looking.performed -= instance.OnLooking;
            @Looking.canceled -= instance.OnLooking;
            @MovementPad.started -= instance.OnMovementPad;
            @MovementPad.performed -= instance.OnMovementPad;
            @MovementPad.canceled -= instance.OnMovementPad;
            @MeleeAttackPad.started -= instance.OnMeleeAttackPad;
            @MeleeAttackPad.performed -= instance.OnMeleeAttackPad;
            @MeleeAttackPad.canceled -= instance.OnMeleeAttackPad;
            @AbilityCheeseWheel.started -= instance.OnAbilityCheeseWheel;
            @AbilityCheeseWheel.performed -= instance.OnAbilityCheeseWheel;
            @AbilityCheeseWheel.canceled -= instance.OnAbilityCheeseWheel;
            @AbilityAppleThrow.started -= instance.OnAbilityAppleThrow;
            @AbilityAppleThrow.performed -= instance.OnAbilityAppleThrow;
            @AbilityAppleThrow.canceled -= instance.OnAbilityAppleThrow;
            @AbilityPumpkinMine.started -= instance.OnAbilityPumpkinMine;
            @AbilityPumpkinMine.performed -= instance.OnAbilityPumpkinMine;
            @AbilityPumpkinMine.canceled -= instance.OnAbilityPumpkinMine;
            @OpenPause.started -= instance.OnOpenPause;
            @OpenPause.performed -= instance.OnOpenPause;
            @OpenPause.canceled -= instance.OnOpenPause;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("KeyboardMouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnMeleeAttack(InputAction.CallbackContext context);
        void OnMovement(InputAction.CallbackContext context);
        void OnLooking(InputAction.CallbackContext context);
        void OnMovementPad(InputAction.CallbackContext context);
        void OnMeleeAttackPad(InputAction.CallbackContext context);
        void OnAbilityCheeseWheel(InputAction.CallbackContext context);
        void OnAbilityAppleThrow(InputAction.CallbackContext context);
        void OnAbilityPumpkinMine(InputAction.CallbackContext context);
        void OnOpenPause(InputAction.CallbackContext context);
    }
}
